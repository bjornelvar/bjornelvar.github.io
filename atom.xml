<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Bj√∂ssi</title>
    <subtitle>A clean resume theme</subtitle>
    <link href=".xyz/atom.xml" rel="self" type="application/atom+xml"/>
    <link href=".xyz"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2022-12-14T00:00:00+00:00</updated>
    <id>.xyz/atom.xml</id>
    <entry xml:lang="en">
        <title>Canvas Crisis</title>
        <published>2022-12-14T00:00:00+00:00</published>
        <updated>2022-12-14T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href=".xyz/projects/canvas-crisis/" type="text/html"/>
        <id>.xyz/projects/canvas-crisis/</id>
        <content type="html">&lt;p&gt;&lt;img src=&quot;&#x2F;media&#x2F;blueredjump.gif&quot; alt=&quot;Blue Red Jump&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;play-here&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bjornelvar.itch.io&#x2F;canvas-crisis?secret=nalHXxorpAvtMxefb4dOVO4unG4&quot;&gt;PLAY HERE&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bjornelvar.itch.io&#x2F;canvas-crisis?secret=nalHXxorpAvtMxefb4dOVO4unG4&quot;&gt;Canvas Crisis&lt;&#x2F;a&gt; is a 2D game created in Unity. It is a platformer where you can paint the world to your liking to solve the levels. You can paint the platforms and the tiles around you to make the player jump higher, climb up walls or just go faster. The game was designed and programmed in 2 weeks.&lt;&#x2F;p&gt;
&lt;p&gt;This game was part of the 3-week course Computer Game Design and Development at Reykjavik University. The course was taught by Steinger√∞ur L√≥a and our group was invited to present our game and to represent Reykjavik University at the UT Messan event in Reykjavik.&lt;&#x2F;p&gt;
</content>
    </entry>
    <entry xml:lang="en">
        <title>Anti-Clockwise Rocket Science</title>
        <published>2022-12-01T00:00:00+00:00</published>
        <updated>2022-12-01T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href=".xyz/projects/anti-clockwise-rocket-science/" type="text/html"/>
        <id>.xyz/projects/anti-clockwise-rocket-science/</id>
        <content type="html">&lt;p&gt;&lt;img src=&quot;&#x2F;media&#x2F;rocketscience_desc.png&quot; alt=&quot;Rocket Science&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;play-here&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bjornelvar.itch.io&#x2F;anti-clockwise-rocket-science-2?secret=1ncTbgCp2wtRKMwuPlaZhDNjb4&quot;&gt;PLAY HERE&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bjornelvar.itch.io&#x2F;anti-clockwise-rocket-science-2?secret=1ncTbgCp2wtRKMwuPlaZhDNjb4&quot;&gt;Anti-Clockwise Rocket Science&lt;&#x2F;a&gt; is what is best described as a 1 player ping pong game. The objective is to keep hitting the ball, bouncing it back and forth between yourself or your friendly UFO. This game was created in the first week of the 3-week course Computer Game Design and Development at Reykjavik University.&lt;&#x2F;p&gt;
&lt;p&gt;I wanted to make this game as zen as possible and I believe I achieved that. I wanted the game to never increase in difficulty, but rather to be a relaxing experience completed by the background music and sound effects.&lt;&#x2F;p&gt;
</content>
    </entry>
    <entry xml:lang="en">
        <title>NBA Scores: An Alfred Workflow</title>
        <published>2022-10-24T00:00:00+00:00</published>
        <updated>2022-10-24T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href=".xyz/projects/nba-scores-alfred/" type="text/html"/>
        <id>.xyz/projects/nba-scores-alfred/</id>
        <content type="html">&lt;!-- ### [NBA Scores: An Alfred Workflow](https:&#x2F;&#x2F;alfred.app&#x2F;workflows&#x2F;bjornelvar&#x2F;nba-scores&#x2F;) --&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;media&#x2F;alfred_nba_scores_20221022.gif&quot; alt=&quot;NBA Scores GIF&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h4 id=&quot;featured-on-alfred-gallery&quot;&gt;&lt;i&gt;*Featured on Alfred Gallery!*&lt;&#x2F;i&gt;&lt;&#x2F;h4&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;&#x2F;h3&gt;
&lt;p&gt;One evening, my partner asked me what games were on tonight and I instinctively went to type &lt;code&gt;nba&lt;&#x2F;code&gt; in Alfred. I of course didn&#x27;t have any workflow for it, so I decided to build one myself. I used the &lt;a href=&quot;https:&#x2F;&#x2F;pypi.org&#x2F;project&#x2F;nba-api&#x2F;&quot;&gt;NBA API&lt;&#x2F;a&gt; to get the data and then built a workflow around it using Python. And &lt;em&gt;a lot&lt;&#x2F;em&gt; of JSON parsing.&lt;&#x2F;p&gt;
&lt;p&gt;If you&#x27;re interested in that kind of stuff, you can check out my &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bjornelvar&#x2F;alfred_nba_scores&quot;&gt;Github repository&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;how-to-use-it&quot;&gt;How to use it:&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;An Alfred Powerpack is required. (Sorry)&lt;&#x2F;li&gt;
&lt;li&gt;Download the workflow from &lt;a href=&quot;https:&#x2F;&#x2F;alfred.app&#x2F;workflows&#x2F;bjornelvar&#x2F;nba-scores&#x2F;&quot;&gt;Alfred Gallery&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Double click it to install.&lt;&#x2F;li&gt;
&lt;li&gt;Type &lt;code&gt;nba&lt;&#x2F;code&gt; in Alfred.&lt;&#x2F;li&gt;
&lt;li&gt;Press enter or use the built-in hotkey on a game to see the box score or summary.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;examples&quot;&gt;Examples&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;media&#x2F;alfred_nba_scores_pre.png&quot; alt=&quot;NBA Scores Pre&quot; &#x2F;&gt;
&lt;img src=&quot;&#x2F;media&#x2F;alfred_nba_scores_small.png&quot; alt=&quot;NBA Scores Small&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;credits&quot;&gt;Credits&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pypi.org&#x2F;project&#x2F;nba-api&#x2F;&quot;&gt;NBA API&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Kristjana √ìsk for asking me what games were on tonight.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
    </entry>
    <entry xml:lang="en">
        <title>Huggingface&#x2F;datasets</title>
        <published>2021-08-28T14:13:14.674+00:00</published>
        <updated>2021-08-28T14:13:14.674+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href=".xyz/opensource/huggingface-datasets/" type="text/html"/>
        <id>.xyz/opensource/huggingface-datasets/</id>
        <content type="html">&lt;p&gt;ü§ó Datasets is a lightweight library providing two main features:&lt;&#x2F;p&gt;
&lt;p&gt;one-line dataloaders for many public datasets: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;one liners to download and pre-process any of the number of datasets major public datasets (in 467 languages and dialects!) provided on the HuggingFace Datasets Hub. With a simple command like &lt;code&gt;squad_dataset = load_dataset(&amp;quot;squad&amp;quot;)&lt;&#x2F;code&gt;, get any of these datasets ready to use in a dataloader for training&#x2F;evaluating a ML model (Numpy&#x2F;Pandas&#x2F;PyTorch&#x2F;TensorFlow&#x2F;JAX),&lt;&#x2F;li&gt;
&lt;li&gt;efficient data pre-processing: simple, fast and reproducible data pre-processing for the above public datasets as well as your own local datasets in CSV&#x2F;JSON&#x2F;text. With simple commands like &lt;code&gt;tokenized_dataset = dataset.map(tokenize_example)&lt;&#x2F;code&gt;, efficiently prepare the dataset for inspection and ML model evaluation and training.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
    </entry>
    <entry xml:lang="en">
        <title>N-LTP: A Open-source Neural Chinese Language Technology Platform with Pretrained Models</title>
        <published>2021-08-28T11:00:37.434+00:00</published>
        <updated>2021-08-28T11:00:37.434+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href=".xyz/publications/n-ltp-a-open-source-neural-chinese-language-technology-platform-with-pretrained-models/" type="text/html"/>
        <id>.xyz/publications/n-ltp-a-open-source-neural-chinese-language-technology-platform-with-pretrained-models/</id>
        <content type="html">&lt;p&gt;An open-source neural language technology platform supporting six fundamental Chinese NLP tasks: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;lexical analysis (Chinese word segmentation, part-of-speech tagging, and named entity recognition)&lt;&#x2F;li&gt;
&lt;li&gt;syntactic parsing (dependency parsing)&lt;&#x2F;li&gt;
&lt;li&gt;semantic parsing (semantic dependency parsing and semantic role labeling). &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Unlike the existing state-of-the-art toolkits, such as Stanza, that adopt an independent model for each task, N-LTP adopts the multi-task framework by using a shared pre-trained model, which has the advantage of capturing the shared knowledge across relevant Chinese tasks. &lt;&#x2F;p&gt;
&lt;p&gt;In addition, knowledge distillation where the single-task model teaches the multi-task model is further introduced to encourage the multi-task model to surpass its single-task teacher.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, we provide a collection of easy-to-use APIs and a visualization tool to make users easier to use and view the processing results directly. To the best of our knowledge, this is the first toolkit to support six Chinese NLP fundamental tasks. &lt;&#x2F;p&gt;
</content>
    </entry>
    <entry xml:lang="en">
        <title>HIT-SCIR at MRP 2020: Transition-based Parser and Iterative Inference Parser</title>
        <published>2020-09-01T11:00:06.142+00:00</published>
        <updated>2020-09-01T11:00:06.142+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href=".xyz/publications/hit-scir-at-mrp-2020-transition-based-parser-and-iterative-inference-parser/" type="text/html"/>
        <id>.xyz/publications/hit-scir-at-mrp-2020-transition-based-parser-and-iterative-inference-parser/</id>
        <content type="html">&lt;p&gt;This paper describes our submission system (HIT-SCIR) for the CoNLL 2020 shared task: Cross-Framework and Cross-Lingual Meaning Representation Parsing. &lt;&#x2F;p&gt;
&lt;p&gt;The task includes five frameworks for graph-based meaning representations, i.e., UCCA, EDS, PTG, AMR, and DRG. &lt;&#x2F;p&gt;
&lt;p&gt;Our solution consists of two sub-systems: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;transition-based parser for Flavor (1) frameworks (UCCA, EDS, PTG)&lt;&#x2F;li&gt;
&lt;li&gt;iterative inference parser for Flavor (2) frameworks (DRG, AMR). &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;In the final evaluation, our system is ranked 3rd among the seven team both in Cross-Framework Track and Cross-Lingual Track, with the macro-averaged MRP F1 score of 0.81&#x2F;0.69.&lt;&#x2F;p&gt;
</content>
    </entry>
</feed>
